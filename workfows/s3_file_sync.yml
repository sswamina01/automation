# This stack should be deployed in the 2d-non-prod and 2d-prod accounts.
# This is because the AWS WAF and the Certificate is created under these accounts.
# Cloudfront will point to the 2d-digital-services-xxx account's APIGateway
# This CloudFormation to be deployed in non-prod/prod account with stack name td-didms-{env}-cloudfront

AWSTemplateFormatVersion: 2010-09-09
Description: 'CloudFront Distribution for prod environment - Project Henry (Digital ID)'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Please specify the tags for this resource'
        Parameters:
          - CostCenter
          - Creator
          - Environment
          - InfoClassification
          - Name
          - Owner
    ParameterLabels:
      CostCenter:
        default: 'Specify the cost center of this resource'
      Creator:
        default: 'Specify the creator of this resource'
      Environment:
        default: 'Specify the environment where this resource is deployed'
      InfoClassification:
        default: 'Specify the information classification of this resource'
      Name:
        default: 'Specify the name of this resource'
      Owner:
        default: 'Specify the owner of this resource'

Parameters:
  CostCenter:
    Description: 'cost-center'
    Type: 'String'
    Default: '1475'
  Creator:
    Description: 'creator'
    Type: 'String'
  Environment:
    Description: 'environment'
    Type: 'String'
    AllowedValues:
      - Development
      - Test
      - Preproduction
      - Production
    Default: Development
  InfoClassification:
    Description: 'info-classification'
    Type: 'String'
    AllowedValues:
      - 'Unrestricted'
      - 'In-Confidence'
      - 'Restricted'
      - 'Highly Restricted'
    Default: 'In-Confidence'
  Name:
    Description: 'name'
    Type: 'String'
  Owner:
    Description: 'owner'
    Type: 'String'
  Env:
    Description: 'The environment id.'
    Type: 'String'
    AllowedValues:
      - dev
      - dev2
      - dev3
      - dev4
      - dev5
      - dev6
      - test
      - preprod
      - prod
    Default: dev
  EnvironmentId:
    Description: "Environment id used for the default parameters"
    Type: "String"
    Default: "dev"
    AllowedValues:
    - "dev"
    - "test"
    - "preprod"
    - "prod"
    ConstraintDescription: "Must be a supported environment id."
  PriceClass:
    Description: 'The cloudfront distribution price class'
    Type: 'String'
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
    Default: 'PriceClass_All'
  Mode:
    Description: 'Do you want to use the default Cloudfront certificate?'
    Type: 'String'
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  CreateWebACL:
    Type: String
    Description: Do you want to deploy WAF infront of cloudfront?
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  LogCloudfrontAccessLogs:
    Type: String
    Description: Do you want to enable AccesLogs in Cloudfront?
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  IncludeCookiesInLog:
    Type: String
    Description: Do you want to log cookies in accessLogs?
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
  LogBucket:
    Type: String
    Description: S3 bucket to write logs to (secure logs s3 bucket)
    Default: 'lzi-waf-cloudfont-logging-nonprodwaflogsbucket-1vp2vjkeh9gl2'

Mappings:
  EnvMap:
    dev:
      DidmsDomainName: 'abopts3v55.execute-api.ap-southeast-2.amazonaws.com'
      AcmCertificate: 'arn:aws:acm:us-east-1:987358900794:certificate/96098da9-354b-4a38-98d6-27507fe54d10'
      CnameAlias:
        - 'didms-dev.2degrees.nz'
      WAFId: 'arn:aws:wafv2:us-east-1:987358900794:global/webacl/didms-nonprod/70b12cc8-335c-4b85-a118-c2e3f039464b'
    test:
      DidmsDomainName: 'j9brigtr28.execute-api.ap-southeast-2.amazonaws.com'
      AcmCertificate: 'arn:aws:acm:us-east-1:987358900794:certificate/96098da9-354b-4a38-98d6-27507fe54d10'
      CnameAlias:
        -  'didms-test.2degrees.nz'
      WAFId: 'arn:aws:wafv2:us-east-1:987358900794:global/webacl/didms-nonprod/70b12cc8-335c-4b85-a118-c2e3f039464b'
    preprod:
      DidmsDomainName: '6kg61923n9.execute-api.ap-southeast-2.amazonaws.com'
      AcmCertificate: 'arn:aws:acm:us-east-1:987358900794:certificate/96098da9-354b-4a38-98d6-27507fe54d10'
      CnameAlias:
        - 'didms-preprod.2degrees.nz'
      WAFId: 'arn:aws:wafv2:us-east-1:987358900794:global/webacl/didms-nonprod/70b12cc8-335c-4b85-a118-c2e3f039464b'
    prod:
      DidmsDomainName: 'fjqxijobwh.execute-api.ap-southeast-2.amazonaws.com'
      AcmCertificate: 'arn:aws:acm:us-east-1:596616598995:certificate/3b7f830d-b78a-45a4-aed1-b21b43c0c20d'
      CnameAlias:
        - 'didms.2degrees.nz'
      WAFId: 'arn:aws:wafv2:us-east-1:596616598995:global/webacl/didms-prod/fb53926a-15f8-4b66-acfe-8eca5c119946'

Conditions:
  CreateMock: !Equals [!Ref Mode, 'Yes']
  CreateWAF: !Equals [!Ref CreateWebACL, 'Yes']
  LogAccessLogs: !Equals [!Ref LogCloudfrontAccessLogs, 'Yes']

Resources:
  DidmsCloudfrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Metadata:
      Comment: 'Creates the cloudfront distribution for Digital ID with an API Gateway origin'
    Properties:
      DistributionConfig:
        WebACLId:
          !If
            - CreateWAF
            -
              !FindInMap [EnvMap, !Ref "EnvironmentId", WAFId]
            -
              !Ref "AWS::NoValue"
        Comment: 'Digital ID cloudfront distribution with an API Gateway origin'
        DefaultCacheBehavior:
          TargetOriginId: !Sub 'origin-nz.2degrees.didms.${Env}'
          MinTTL: 0
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: true
            Headers: ['Authorization','x-api-key']
          ViewerProtocolPolicy: redirect-to-https
        CacheBehaviors:
          - TargetOriginId: !Sub 'origin-nz.2degrees.didms.${Env}'
            ForwardedValues:
              Headers: ['Authorization']
              Cookies:
                Forward: none
              QueryString: true
            PathPattern: !Sub '/ingest-didms-completed-transaction'
            MinTTL: 0
            AllowedMethods: ["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]
            ViewerProtocolPolicy: redirect-to-https
          - TargetOriginId: !Sub 'origin-nz.2degrees.didms.${Env}'
            ForwardedValues:
              Headers: ['x-api-key']
              Cookies:
                Forward: none
              QueryString: true
            PathPattern: !Sub '/send-link-aia'
            MinTTL: 0
            AllowedMethods: ["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]
            ViewerProtocolPolicy: redirect-to-https
          - TargetOriginId: !Sub 'origin-nz.2degrees.didms.${Env}'
            ForwardedValues:
              Headers: ['Authorization']
              Cookies:
                Forward: none
              QueryString: true
            PathPattern: !Sub '/update-transaction-status'
            MinTTL: 0
            AllowedMethods: ["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]
            ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: 'http2'
        IPV6Enabled: false
        Origins:
          - DomainName: !FindInMap [EnvMap, !Ref "EnvironmentId", DidmsDomainName]
            OriginPath: !Sub '/${Env}'
            Id: !Sub 'origin-nz.2degrees.didms.${Env}'
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
        PriceClass: !Sub ${PriceClass}
        ViewerCertificate:
          !If
            - CreateMock
            -
              CloudFrontDefaultCertificate: true
              MinimumProtocolVersion: 'TLSv1.2_2018'
            -
              AcmCertificateArn: !FindInMap [EnvMap, !Ref "EnvironmentId", AcmCertificate]
              MinimumProtocolVersion: 'TLSv1.2_2018'
              SslSupportMethod: 'sni-only'
        Aliases:
          !If
            - CreateMock
            -
              !Ref "AWS::NoValue"
            -
              !FindInMap [EnvMap, !Ref "EnvironmentId", CnameAlias]
        Logging:
          !If
            - LogAccessLogs
            -
              Bucket: !Join ['', [ !Ref LogBucket, '.s3.amazonaws.com' ] ]
              IncludeCookies: !Ref IncludeCookiesInLog
              Prefix: !Sub didms-${Env}-cloudfront
            -
              !Ref "AWS::NoValue"
      Tags:
        - Key: cost-center
          Value: !Sub '${CostCenter}'
        - Key: creator
          Value: !Sub '${Creator}'
        - Key: environment
          Value: !Sub '${Environment}'
        - Key: info-classification
          Value: !Sub '${InfoClassification}'
        - Key: name
          Value: !Sub '${Name}'
        - Key: owner
          Value: !Sub '${Owner}'

Outputs:
  DidmsCloudfrontDistribution:
    Description: 'Cloudfront domain name for Digital ID(Project Henry)'
    Value: !GetAtt DidmsCloudfrontDistribution.DomainName
  DidmsCFDistributionId:
    Description: 'Cloudfront distribution ID for Didms'
    Value: !Ref DidmsCloudfrontDistribution